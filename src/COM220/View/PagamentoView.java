/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package COM220.View;

import COM220.Control.ctrPagamento;
import COM220.Model.Pagamento;
import COM220.Model.Reserva;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author tiago
 */
public class PagamentoView extends javax.swing.JFrame {

    private final ctrPagamento controle = new ctrPagamento();
    private final PagamentoView.PagamentoAdapter adapter;
    /**
     * Creates new form PagamentoView
     */
    public PagamentoView() {
        initComponents();
        //define que a janela iniciará centralizado.
        setLocationRelativeTo(null);

        adapter = new PagamentoView.PagamentoAdapter(controle);
        tbPagamentos.setModel(adapter);
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbPagamentos = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbPagamentos.setAutoCreateRowSorter(true);
        tbPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbPagamentos);

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plus.png"))); // NOI18N
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnAdicionar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        new AddPagamento(controle, adapter);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPagamentos;
    // End of variables declaration//GEN-END:variables

    public class PagamentoAdapter extends AbstractTableModel {

        private ctrPagamento controle;

        public PagamentoAdapter(ctrPagamento controle) {
            this.controle = controle;
        }

        @Override
        public int getRowCount() {
            return controle.listarTodosPagamentos().size();
        }

        @Override
        public int getColumnCount() {
            return 3;
        }

        public Pagamento getValueAt(int rowIndex) {
            return this.controle.listarTodosPagamentos().get(rowIndex);
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Pagamento r = getValueAt(rowIndex);
            if (columnIndex == 1) {
                return r.getReservaEfetuada();
            } else if (columnIndex == 2) {
                return r.getValor();
            } else {
                return r.getSituacao();
            }
        }

        @Override
        public String getColumnName(int column) {
            if (column == 1) {
                return "Reserva";
            } else if (column == 2) {
                return "Valor";
            } else {
                return "Situação";
            }
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return true;
        }
    }
}
